// <auto-generated />
using System;
using waitly_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace waitly_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250412193420_CambiosCatalogo")]
    partial class CambiosCatalogo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("waitly_API.Models.Entities.Asiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdGrupoAsiento")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<string>("IpCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdGrupoAsiento");

                    b.HasIndex("IdTipo");

                    b.ToTable("Asientos");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Catalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdPadre")
                        .HasColumnType("int");

                    b.Property<string>("IpCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nemonico")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPadre");

                    b.ToTable("Catalogos");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IpCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nemonico")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.GrupoAsiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IpCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GruposAsientos");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdPadre")
                        .HasColumnType("int");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<string>("IpCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nemonico")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("VerificaPermiso")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdPadre");

                    b.HasIndex("IdPermiso");

                    b.HasIndex("IdTipo");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Pantalla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMenu")
                        .HasColumnType("int");

                    b.Property<string>("IpCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nemonico")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("VerificaPermiso")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdMenu");

                    b.ToTable("Pantallas");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<string>("IpCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nemonico")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipo");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.PermisoPantalla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPantalla")
                        .HasColumnType("int");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPantalla");

                    b.HasIndex("IdPermiso");

                    b.ToTable("PermisosPantallas");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("IpCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.RolPermiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPermiso");

                    b.HasIndex("IdRol");

                    b.ToTable("RolPermisos");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IpCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IpModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nombres")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Removido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("User")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.UsuarioEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioEmpresas");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.UsuarioRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioRoles");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Asiento", b =>
                {
                    b.HasOne("waitly_API.Models.Entities.Catalogo", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("waitly_API.Models.Entities.GrupoAsiento", "GrupoAsiento")
                        .WithMany("Asientos")
                        .HasForeignKey("IdGrupoAsiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("waitly_API.Models.Entities.Catalogo", "Tipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("GrupoAsiento");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Catalogo", b =>
                {
                    b.HasOne("waitly_API.Models.Entities.Catalogo", "Padre")
                        .WithMany("Hijos")
                        .HasForeignKey("IdPadre")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Padre");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Menu", b =>
                {
                    b.HasOne("waitly_API.Models.Entities.Empresa", "Empresa")
                        .WithMany("Menus")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("waitly_API.Models.Entities.Menu", "MenuPadre")
                        .WithMany("SubMenus")
                        .HasForeignKey("IdPadre");

                    b.HasOne("waitly_API.Models.Entities.Permiso", "Permiso")
                        .WithMany("Menus")
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("waitly_API.Models.Entities.Catalogo", "Tipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("MenuPadre");

                    b.Navigation("Permiso");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Pantalla", b =>
                {
                    b.HasOne("waitly_API.Models.Entities.Menu", "Menu")
                        .WithMany("Pantallas")
                        .HasForeignKey("IdMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Permiso", b =>
                {
                    b.HasOne("waitly_API.Models.Entities.Catalogo", "Tipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.PermisoPantalla", b =>
                {
                    b.HasOne("waitly_API.Models.Entities.Pantalla", "Pantalla")
                        .WithMany("PermisosPantallas")
                        .HasForeignKey("IdPantalla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("waitly_API.Models.Entities.Permiso", "Permiso")
                        .WithMany("PermisosPantallas")
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pantalla");

                    b.Navigation("Permiso");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Rol", b =>
                {
                    b.HasOne("waitly_API.Models.Entities.Empresa", "Empresa")
                        .WithMany("Roles")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.RolPermiso", b =>
                {
                    b.HasOne("waitly_API.Models.Entities.Permiso", "Permiso")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("waitly_API.Models.Entities.Rol", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.UsuarioEmpresa", b =>
                {
                    b.HasOne("waitly_API.Models.Entities.Empresa", "Empresa")
                        .WithMany("UsuarioEmpresas")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("waitly_API.Models.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioEmpresas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.UsuarioRol", b =>
                {
                    b.HasOne("waitly_API.Models.Entities.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("waitly_API.Models.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Catalogo", b =>
                {
                    b.Navigation("Hijos");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Empresa", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("Roles");

                    b.Navigation("UsuarioEmpresas");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.GrupoAsiento", b =>
                {
                    b.Navigation("Asientos");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Menu", b =>
                {
                    b.Navigation("Pantallas");

                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Pantalla", b =>
                {
                    b.Navigation("PermisosPantallas");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Permiso", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("PermisosPantallas");

                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Rol", b =>
                {
                    b.Navigation("RolPermisos");

                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("waitly_API.Models.Entities.Usuario", b =>
                {
                    b.Navigation("UsuarioEmpresas");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
